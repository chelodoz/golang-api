openapi: "3.0.2"

info:
  title: JWT PoC
  description: A simple api for fun
  version: "1.0"

servers:
  - url: http://localhost:8080/api/v1
    description: local server

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    AppError:
      description: AppError is generic error message returned by a server
      properties:
        message:
          type: string
    LoginResponse:
      properties:
        accessToken:
          type: string
        accessTokenExpiresAt:
          format: date-time
          type: string
        email:
          type: string
        refreshToken:
          type: string
        refreshTokenExpiresAt:
          format: date-time
          type: string
    LoginRequest:
      properties:
        email:
          type: string
        password:
          type: string
    TokenRequest:
      properties:
        refreshToken:
          type: string
        accessToken:
          type: string
    AccessTokenRequest:
      properties:
        accessToken:
          type: string
    GetUser:
      properties:
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
    UpdateUser:
      properties:
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        password:
          type: string

  parameters:
    userIdParam:
      in: path
      name: userId
      required: true
      description: User Id
      schema:
        type: integer
        format: int32
        minimum: 0
        default: 0

  responses:
    BadRequestError:
      description: One of the request inputs is not valid
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/AppError"
          example:
            message: Bad Request
    NoContent:
      description: No content
    UnauthorizedError:
      description: Access token is missing or invalid
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/AppError"
          example:
            message: Unauthorized
    InternalServerError:
      description: The server encountered an internal error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/AppError"
          example:
            message: Internal Server Error
    LoginResponse:
      description: Login response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/LoginResponse"
          example:
            accessToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJJRCI6IjA1NjFjMjcwLWY1YzQtMTFlYy04ODE2LWIwN2IyNTUwY2JiMSIsIlVzZXJFbWFpbCI6InRlc3Q4QGdtYWlsLmNvbSIsIklzc3VlZEF0IjoiMjAyMi0wNi0yNlQyMzo1MToxOS40Mzk0NTMyLTAzOjAwIiwiRXhwaXJlZEF0IjoiMjAyMi0wNi0yN1QwMDowNjoxOS40Mzk0NTMyLTAzOjAwIn0.0-JleAcb9Lq0KGxlCiDZmUOCHp4u1cjmAzs0jxYcAuM
            accessTokenExpiresAt: 2022-06-27T00:06:19.4394532-03:00
            refreshToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJJRCI6IjA1NjJiZjY0LWY1YzQtMTFlYy04ODE2LWIwN2IyNTUwY2JiMSIsIlVzZXJFbWFpbCI6InRlc3Q4QGdtYWlsLmNvbSIsIklzc3VlZEF0IjoiMjAyMi0wNi0yNlQyMzo1MToxOS40Mzk1NDkyLTAzOjAwIiwiRXhwaXJlZEF0IjoiMjAyMi0wNi0yN1QyMzo1MToxOS40Mzk1NDkyLTAzOjAwIn0.L-RUAV2uHBW7z6ay8BX4iAuFtW9gerSGjD7kZEqxytI
            refreshTokenExpiresAt: 2022-06-27T23:51:19.4395492-03:00
            email: test@gmail.com
    UsersResponse:
      description: A list of users
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/GetUser"
            example:
              - email: test@gmail.com
                firstName: John
                lastName: Doe
              - email: test@gmail.com
                firstName: John
                lastName: Doe
    UserResponse:
      description: A user
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GetUser"
          example:
            email: test1@gmail.com
            firstName: Gin
            lastName: Gonic

paths:
  /auth/login:
    post:
      summary: Create JWT tokens
      tags:
        - Auth
      description: Create a temporary access token and refresh token for a given mail of a user
      requestBody:
        description: Request body
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        201:
          $ref: "#/components/responses/LoginResponse"
        400:
          $ref: "#/components/responses/BadRequestError"
        401:
          $ref: "#/components/responses/UnauthorizedError"
        500:
          $ref: "#/components/responses/InternalServerError"
  /auth/logout:
    delete:
      summary: Remove the given refresh token
      tags:
        - Auth
      description: Remove the given refresh token
      requestBody:
        description: Request body
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TokenRequest"
      responses:
        204:
          $ref: "#/components/responses/NoContent"
        400:
          $ref: "#/components/responses/BadRequestError"
        401:
          $ref: "#/components/responses/UnauthorizedError"
        500:
          $ref: "#/components/responses/InternalServerError"
  /auth/revoke:
    delete:
      summary: Remove all tokens of a user
      tags:
        - Auth
      description: Remove all sessions of a user
      requestBody:
        description: Request body
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccessTokenRequest"
      responses:
        204:
          $ref: "#/components/responses/NoContent"
        400:
          $ref: "#/components/responses/BadRequestError"
        401:
          $ref: "#/components/responses/UnauthorizedError"
        500:
          $ref: "#/components/responses/InternalServerError"
  /auth/refresh:
    post:
      summary: Refresh an expired JWT token
      tags:
        - Auth
      description: Refresh both tokens if access token is expired and refresh token is still valid
      requestBody:
        description: Request body
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TokenRequest"
      responses:
        201:
          $ref: "#/components/responses/LoginResponse"
        400:
          $ref: "#/components/responses/BadRequestError"
        401:
          $ref: "#/components/responses/UnauthorizedError"
        500:
          $ref: "#/components/responses/InternalServerError"
  /secure/users:
    get:
      tags:
        - Users
      description: List all users
      responses:
        200:
          $ref: "#/components/responses/UsersResponse"
        500:
          $ref: "#/components/responses/InternalServerError"
    post:
      tags:
        - Users
      description: Create a user
      responses:
        201:
          $ref: "#/components/responses/UsersResponse"
        500:
          $ref: "#/components/responses/InternalServerError"
  /secure/users/{userId}:
    parameters:
      - $ref: "#/components/parameters/userIdParam"
    get:
      tags:
        - Users
      description: Retrieve a user
      responses:
        200:
          $ref: "#/components/responses/UserResponse"
        500:
          $ref: "#/components/responses/InternalServerError"
    patch:
      tags:
        - Users
      description: Update a user
      requestBody:
        description: Request body
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateUser"
      responses:
        200:
          $ref: "#/components/responses/UserResponse"
        500:
          $ref: "#/components/responses/InternalServerError"
    delete:
      tags:
        - Users
      description: Delete a user
      responses:
        204:
          $ref: "#/components/responses/NoContent"
        500:
          $ref: "#/components/responses/InternalServerError"
